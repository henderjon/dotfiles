#!/usr/bin/env sh

FILTER=1
if [ -z "$1" ]; then
	FILTER=0
fi

# git for-each-ref --format="%(refname:short) %(upstream:track) %(upstream:remotename)" refs/heads
git for-each-ref --sort=authordate --format='%(refname:lstrip=2)%1F%(objectname:short)%1F%(upstream:lstrip=2)%1F%(upstream:track,nobracket)%1F%(subject)%1F%(HEAD)%1F%(authordate:short)' refs/heads | \
awk -v FILTER=$FILTER 'BEGIN{
		FS="\037";
		OFS="|";
		max = 0;
	}
	{

		if(FILTER == "1"){
			line[NR] = $1 SUBSEP $2 SUBSEP $3 SUBSEP $4 SUBSEP $5 SUBSEP $6 SUBSEP $7
		}else if(match($0, "^archive/") == 0){ # filter out archive branches
			line[NR] = $1 SUBSEP $2 SUBSEP $3 SUBSEP $4 SUBSEP $5 SUBSEP $6 SUBSEP $7
		}

		if(max < length($1)){
			max = length($1);
		}
	}
	END{
		# print("  excluding archive/*");
		ref   = "%-" max "s  "
		hash  = "%s  "
		date  = "(%s)  "
		extra = "[%s: %s] "
		title = "%s\n"
		for(k in line){
			split(line[k], bits, SUBSEP)

			remote = ""
			if(bits[3] != ""){
				remote = extra
			}

			pre = "  " ref
			if(bits[6] == "*"){
				pre = "* " green(ref)
			}

			if(remote == ""){
				printf(pre hash date title, bits[1], bits[2], bits[7], bits[5])
			}else{
				printf(pre hash date remote title, bits[1], bits[2], bits[7], blue(bits[3]), blue(underline(bits[4])), bits[5])
			}

		}
	}

	function green(s){
		return "\033[32m" s "\033[0m";
	}

	function blue(s){
		return "\033[36m" s "\033[0m";
	}

	function red(s){
		return "\033[31m" s "\033[0m";
	}

	function yellow(s){
		return "\033[33m" s "\033[0m";
	}

	function underline(s){
		return "\033[4m" s "\033[0m";
	}'

#refnam hash remoterefname relationsinp subject HEAD
# bb = for-each-ref --sort=authordate --format='%(refname:lstrip=2)%1F%(objectname:short)%1F%(upstream:lstrip=2)%1F%(upstream:track,nobracket)%1F%(subject)' refs/heads ^archive/
# bb = for-each-ref --sort=authordate --format='%(refname:lstrip=2)%1F%(objectname:short)%1F%(upstream:lstrip=2)%1F%(upstream:track,nobracket)%1F%(subject)' refs/heads ^archive/
# bb = for-each-ref --sort=authordate --format='%(align:50,left)%(refname:lstrip=2)%(end) %(objectname:short) %(upstream:track,nobracket) %(subject)' refs/heads ^archive/
# bb = for-each-ref --color=always --format="%(refname:short) [%C(red)%(upstream)%Creset] %(contents:subject)" --sort=authordate
# bb = for-each-ref --shell --format='git log --oneline %(refname) ^origin' refs/heads/
# bb = for-each-ref --sort=-authordate --count=20 --shell --format='git log --format="%<(28)%d %<(28)%h %(upstream:track,nobracket)" %(objectname:short)' refs/heads/
