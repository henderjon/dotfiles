######################################################################## AWK ###

The standard AWK variables are discussed below.

ARGC        - It implies the number of arguments provided at the command line.
ARGV        - It is an array that stores the command-line arguments. The array's valid index ranges from 0 to ARGC-1.
CONVFMT     - It represents the conversion format for numbers. Its default value is %.6g.
ENVIRON     - It is an associative array of environment variables. To find names of other environment variables, use env command.
FILENAME    - It represents the current file name. Please note that FILENAME is undefined in the BEGIN block.
FS          - It represents the (input) field separator and its default value is space. You can also change this by using -F command line option.
NF          - It represents the number of fields in the current record. For instance, the following example prints only those lines that contain more than two fields.
NR          - It represents the number of the current record. For instance, the following example prints the record if the current record number is less than three.
FNR         - It is similar to NR, but relative to the current file. It is useful when AWK is operating on multiple files. Value of FNR resets with new file.
OFMT        - It represents the output format number and its default value is %.6g.
OFS         - It represents the output field separator and its default value is space.
ORS         - It represents the output record separator and its default value is newline.
RLENGTH     - It represents the length of the string matched by match function. AWK's match function searches for a given string in the input-string.
RS          - It represents (input) record separator and its default value is newline.
RSTART      - It represents the first position in the string matched by match function.
SUBSEP      - It represents the separator character for array subscripts and its default value is \034.
$0          - It represents the entire input record.
$n          - It represents the nth field in the current record where the fields are separated by FS.

GNU AWK Specific Variables
ARGIND      - It represents the index in ARGV of the current file being processed.
BINMODE     - It is used to specify binary mode for all file I/O on non-POSIX systems. Numeric values of 1, 2, or 3 specify that input files, output files, or all files, respectively, should use binary I/O. String values of r or w specify that input files or output files, respectively, should use binary I/O. String values of rw or wr specify that all files should use binary I/O.
ERRNO       - A string indicates an error when a redirection fails for getline or if close call fails.
FIELDWIDTHS - A space separated list of field widths variable is set, GAWK parses the input into fields of fixed width, instead of using the value of the FS variable as the field separator.
IGNORECASE  - When this variable is set, GAWK becomes case-insensitive. The following example demonstrates this âˆ’
LINT        - It provides dynamic control of the --lint option from the GAWK program. When this variable is set, GAWK prints lint warnings. When assigned the string value fatal, lint warnings become fatal errors, exactly like --lint=fatal.
PROCINFO    - This is an associative array containing information about the process, such as real and effective UID numbers, process ID number, and so on.
TEXTDOMAIN  - It represents the text domain of the AWK program. It is used to find the localized translations for the program's strings.

### Multi-dimensional arrays

$arr[key1, key2] = "value"
Test for membership: if ((key1, key2) in arr)...
# default SUBSEP = \034
Loop over membership: for (key in arr){ split(key, indices, SUBSEP) }

### Basic Scripting

BEGIN{FS="\t"; OFS="\t";}
NR == 1{
	for(i = 1; i < NF; i += 1){
		if(i % 2 != 0){
			print(i, $i);
		}
	}
	exit;
}
END{}
