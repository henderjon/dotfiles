# GITHUB / GH
--------------------------------------------------------------------------------

- https://cli.github.com/
- https://docs.github.com/en/search-github/getting-started-with-searching-on-github/understanding-the-search-syntax
- https://docs.github.com/en/search-github/getting-started-with-searching-on-github/about-searching-on-github
- https://docs.github.com/en/search-github/searching-on-github/searching-issues-and-pull-requests
- https://docs.github.com/en/issues/tracking-your-work-with-issues/filtering-and-searching-issues-and-pull-requests

GITHUB ACTIONS
--------------------------------------------------------------------------------

- https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#release
- https://docs.github.com/webhooks-and-events/webhooks/webhook-events-and-payloads#push
- https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#onevent_nametypes
- https://docs.github.com/en/actions/learn-github-actions/contexts#github-context
- https://docs.github.com/en/actions/using-workflows/workflow-commands-for-github-actions#environment-files
- https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go
- https://fabianlee.org/2022/11/20/github-automated-github-release-of-golang-binary-using-github-actions/
- https://trstringer.com/github-actions-create-release-upload-artifacts/

GITHUB.COM & GPG
--------------------------------------------------------------------------------

- https://docs.github.com/en/authentication/managing-commit-signature-verification/about-commit-signature-verification#ssh-commit-signature-verification

GitHub will automatically use GPG to sign commits you make using the web interface. Commits signed by GitHub will have a verified status. You can verify the signature locally using the public key available at https://github.com/web-flow.gpg. The full fingerprint of the key is 5DE3 E050 9C47 EA3C F04A 42D3 4AEE 18F8 3AFD EB23.

Github Packages Registry
--------------------------------------------------------------------------------

- https://docs.github.com/en/packages/working-with-a-github-packages-registry/working-with-the-container-registry#authenticating-to-the-container-registry

Save your personal access token (classic). We recommend saving your token as an environment variable. Token should have read:packages permission

- $ export CR_PAT=YOUR_TOKEN
- $ echo $CR_PAT | docker login ghcr.io -u USERNAME --password-stdin

GITHUB.COM PAGES DSN
--------------------------------------------------------------------------------

For A records:

$ dig EXAMPLE.COM +noall +answer -t A
> EXAMPLE.COM    3600    IN A     185.199.108.153
> EXAMPLE.COM    3600    IN A     185.199.109.153
> EXAMPLE.COM    3600    IN A     185.199.110.153
> EXAMPLE.COM    3600    IN A     185.199.111.153

For AAAA records:

$ dig EXAMPLE.COM +noall +answer -t AAAA
> EXAMPLE.COM     3600    IN AAAA     2606:50c0:8000::153
> EXAMPLE.COM     3600    IN AAAA     2606:50c0:8001::153
> EXAMPLE.COM     3600    IN AAAA     2606:50c0:8002::153
> EXAMPLE.COM     3600    IN AAAA     2606:50c0:8003::153

For CNAME records / WWW:

$ dig WWW.EXAMPLE.COM +nostats +nocomments +nocmd
> ;WWW.EXAMPLE.COM                     IN      A
> WWW.EXAMPLE.COM.              3592    IN      CNAME   YOUR-USERNAME.github.io.
> YOUR-USERNAME.github.io.      43192   IN      CNAME   GITHUB-PAGES-SERVER.
> GITHUB-PAGES-SERVER.         22      IN      A       192.0.2.1

DEVELOP WEBHOOKS
--------------------------------------------------------------------------------

- https://docs.github.com/developers/webhooks-and-events/webhooks/receiving-webhooks-with-the-github-cli

gh webhook forward --repo monalisa/hello-world --events issues,pull_request --url http://localhost:4000/webhooks

NEED MY REVIEW
--------------------------------------------------------------------------------

- gh # https://docs.github.com/en/issues/tracking-your-work-with-issues/filtering-and-searching-issues-and-pull-requests

$ gh pr status
$ gh pr -R $REPO list -S "is:pr is:open user-review -requested:@me "
$ gh pr -R $REPO list -S "is:pr is:open -reviewed-by:@me "
$ gh pr -R $REPO list -S "is:pr is:open is:pr author:@me "
$ gh pr -R $REPO list -S "is:pr is:open is:issue author:@me "
$ gh pr -R $REPO list -S "is:pr is:open assignee:@me "

Interact with PRs
--------------------------------------------------------------------------------

$ gh label list
$ gh pr view $N
$ gh pr create
$ gh pr edit $N --add-label "label"
$ gh pr edit $N --add-assignee $name
$ gh pr comment $N -b "comment"
$ gh pr comment $N -b "@cronrunner new issue"
$ gh pr diff $N
$ gh pr review $N -a -b ":8ball:"
