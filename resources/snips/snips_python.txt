# PYTHON

STRINGS
--------------------------------------------------------------------------------

s = u'is a unicode string'
s = b'is a bytes string'
s = f'string {var}' # interpolates vars
s = r'no need to escape the \ char'
s = 'fpri%t' % 'n'
s = 'this uses {0}'.format('indicies')
s = 'this uses {v}'.format(v='indicies')

ARRAYS
--------------------------------------------------------------------------------

- List is a collection which is ordered and changeable. Allows duplicate members.
- Tuple is a collection which is ordered and unchangeable. Allows duplicate members.
- Set is a collection which is unordered, unchangeable*, and unindexed. No duplicate members.
- Dictionary is a collection which is ordered** and changeable. No duplicate members.

*Set items are unchangeable, but you can remove and/or add items whenever you like.
**As of Python version 3.7, dictionaries are ordered. In Python 3.6 and earlier, dictionaries are unordered.

TYPES
--------------------------------------------------------------------------------

User `type()` to see a vars type.

- Text Type:      str
- Numeric Types:  int, float, complex
- Sequence Types: list, tuple, range
- Mapping Type:   dict
- Set Types:      set, frozenset
- Boolean Type:   bool (True, False)
- Binary Types:   bytes, bytearray, memoryview
- None Type:      NoneType (None)

SHELL
--------------------------------------------------------------------------------

- import subprocess
  - subprocess.call(['sh', './test.sh'])
  - subprocess.run(['sh', './test.sh'])

LOOPS
--------------------------------------------------------------------------------

- while expression:
- for X in Y:

IMPORTS
--------------------------------------------------------------------------------

- import sys
    - print(sys.argv)
- import json
- import os
- import argparse
- import requests
    - [python-requests.org](https://docs.python-requests.org/en/latest/user/quickstart/#more-complicated-post-requests)

ITERATION
--------------------------------------------------------------------------------

Iteration returns INDEXES; for dictionaries use `.keys()`, `.values()`, `.items()`.

Use `range(start, stop, step)`

- start; Optional. An integer number specifying at which position to start. Default is 0
- stop; Required. An integer number specifying at which position to stop (not included).
- step; Optional. An integer number specifying the incrementation. Default is 1

MODULES
--------------------------------------------------------------------------------

`if __name__ == '__main__':`

FILES / JSON
--------------------------------------------------------------------------------

- obj = json.loads(open(i.path, "r").read())
- os.path.dirname(i.path)
- os.listdir(dir)
- os.scandir(dir)
